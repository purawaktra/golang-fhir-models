// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// FHIRVersion is documented here http://hl7.org/fhir/ValueSet/FHIR-version
type FHIRVersion int

const (
	FHIRVersion0_01 FHIRVersion = iota
	FHIRVersion0_05
	FHIRVersion0_06
	FHIRVersion0_11
	FHIRVersion0_0
	FHIRVersion0_0_80
	FHIRVersion0_0_81
	FHIRVersion0_0_82
	FHIRVersion0_4
	FHIRVersion0_4_0
	FHIRVersion0_5
	FHIRVersion0_5_0
	FHIRVersion1_0
	FHIRVersion1_0_0
	FHIRVersion1_0_1
	FHIRVersion1_0_2
	FHIRVersion1_1
	FHIRVersion1_1_0
	FHIRVersion1_4
	FHIRVersion1_4_0
	FHIRVersion1_6
	FHIRVersion1_6_0
	FHIRVersion1_8
	FHIRVersion1_8_0
	FHIRVersion3_0
	FHIRVersion3_0_0
	FHIRVersion3_0_1
	FHIRVersion3_0_2
	FHIRVersion3_3
	FHIRVersion3_3_0
	FHIRVersion3_5
	FHIRVersion3_5_0
	FHIRVersion4_0
	FHIRVersion4_0_0
	FHIRVersion4_0_1
	FHIRVersion4_1
	FHIRVersion4_1_0
	FHIRVersion4_2
	FHIRVersion4_2_0
	FHIRVersion4_3
	FHIRVersion4_3_0
	FHIRVersion4_3_0Cibuild
	FHIRVersion4_3_0Snapshot1
	FHIRVersion4_4
	FHIRVersion4_4_0
	FHIRVersion4_5
	FHIRVersion4_5_0
	FHIRVersion4_6
	FHIRVersion4_6_0
	FHIRVersion5_0
	FHIRVersion5_0_0
	FHIRVersion5_0_0Cibuild
	FHIRVersion5_0_0Snapshot1
	FHIRVersion5_0_0Snapshot2
	FHIRVersion5_0_0Ballot
	FHIRVersion5_0_0Snapshot3
	FHIRVersion5_0_0DraftFinal
)

func (code FHIRVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *FHIRVersion) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "0.01":
		*code = FHIRVersion0_01
	case "0.05":
		*code = FHIRVersion0_05
	case "0.06":
		*code = FHIRVersion0_06
	case "0.11":
		*code = FHIRVersion0_11
	case "0.0":
		*code = FHIRVersion0_0
	case "0.0.80":
		*code = FHIRVersion0_0_80
	case "0.0.81":
		*code = FHIRVersion0_0_81
	case "0.0.82":
		*code = FHIRVersion0_0_82
	case "0.4":
		*code = FHIRVersion0_4
	case "0.4.0":
		*code = FHIRVersion0_4_0
	case "0.5":
		*code = FHIRVersion0_5
	case "0.5.0":
		*code = FHIRVersion0_5_0
	case "1.0":
		*code = FHIRVersion1_0
	case "1.0.0":
		*code = FHIRVersion1_0_0
	case "1.0.1":
		*code = FHIRVersion1_0_1
	case "1.0.2":
		*code = FHIRVersion1_0_2
	case "1.1":
		*code = FHIRVersion1_1
	case "1.1.0":
		*code = FHIRVersion1_1_0
	case "1.4":
		*code = FHIRVersion1_4
	case "1.4.0":
		*code = FHIRVersion1_4_0
	case "1.6":
		*code = FHIRVersion1_6
	case "1.6.0":
		*code = FHIRVersion1_6_0
	case "1.8":
		*code = FHIRVersion1_8
	case "1.8.0":
		*code = FHIRVersion1_8_0
	case "3.0":
		*code = FHIRVersion3_0
	case "3.0.0":
		*code = FHIRVersion3_0_0
	case "3.0.1":
		*code = FHIRVersion3_0_1
	case "3.0.2":
		*code = FHIRVersion3_0_2
	case "3.3":
		*code = FHIRVersion3_3
	case "3.3.0":
		*code = FHIRVersion3_3_0
	case "3.5":
		*code = FHIRVersion3_5
	case "3.5.0":
		*code = FHIRVersion3_5_0
	case "4.0":
		*code = FHIRVersion4_0
	case "4.0.0":
		*code = FHIRVersion4_0_0
	case "4.0.1":
		*code = FHIRVersion4_0_1
	case "4.1":
		*code = FHIRVersion4_1
	case "4.1.0":
		*code = FHIRVersion4_1_0
	case "4.2":
		*code = FHIRVersion4_2
	case "4.2.0":
		*code = FHIRVersion4_2_0
	case "4.3":
		*code = FHIRVersion4_3
	case "4.3.0":
		*code = FHIRVersion4_3_0
	case "4.3.0-cibuild":
		*code = FHIRVersion4_3_0Cibuild
	case "4.3.0-snapshot1":
		*code = FHIRVersion4_3_0Snapshot1
	case "4.4":
		*code = FHIRVersion4_4
	case "4.4.0":
		*code = FHIRVersion4_4_0
	case "4.5":
		*code = FHIRVersion4_5
	case "4.5.0":
		*code = FHIRVersion4_5_0
	case "4.6":
		*code = FHIRVersion4_6
	case "4.6.0":
		*code = FHIRVersion4_6_0
	case "5.0":
		*code = FHIRVersion5_0
	case "5.0.0":
		*code = FHIRVersion5_0_0
	case "5.0.0-cibuild":
		*code = FHIRVersion5_0_0Cibuild
	case "5.0.0-snapshot1":
		*code = FHIRVersion5_0_0Snapshot1
	case "5.0.0-snapshot2":
		*code = FHIRVersion5_0_0Snapshot2
	case "5.0.0-ballot":
		*code = FHIRVersion5_0_0Ballot
	case "5.0.0-snapshot3":
		*code = FHIRVersion5_0_0Snapshot3
	case "5.0.0-draft-final":
		*code = FHIRVersion5_0_0DraftFinal
	default:
		return fmt.Errorf("unknown FHIRVersion code `%s`", s)
	}
	return nil
}
func (code FHIRVersion) String() string {
	return code.Code()
}
func (code FHIRVersion) Code() string {
	switch code {
	case FHIRVersion0_01:
		return "0.01"
	case FHIRVersion0_05:
		return "0.05"
	case FHIRVersion0_06:
		return "0.06"
	case FHIRVersion0_11:
		return "0.11"
	case FHIRVersion0_0:
		return "0.0"
	case FHIRVersion0_0_80:
		return "0.0.80"
	case FHIRVersion0_0_81:
		return "0.0.81"
	case FHIRVersion0_0_82:
		return "0.0.82"
	case FHIRVersion0_4:
		return "0.4"
	case FHIRVersion0_4_0:
		return "0.4.0"
	case FHIRVersion0_5:
		return "0.5"
	case FHIRVersion0_5_0:
		return "0.5.0"
	case FHIRVersion1_0:
		return "1.0"
	case FHIRVersion1_0_0:
		return "1.0.0"
	case FHIRVersion1_0_1:
		return "1.0.1"
	case FHIRVersion1_0_2:
		return "1.0.2"
	case FHIRVersion1_1:
		return "1.1"
	case FHIRVersion1_1_0:
		return "1.1.0"
	case FHIRVersion1_4:
		return "1.4"
	case FHIRVersion1_4_0:
		return "1.4.0"
	case FHIRVersion1_6:
		return "1.6"
	case FHIRVersion1_6_0:
		return "1.6.0"
	case FHIRVersion1_8:
		return "1.8"
	case FHIRVersion1_8_0:
		return "1.8.0"
	case FHIRVersion3_0:
		return "3.0"
	case FHIRVersion3_0_0:
		return "3.0.0"
	case FHIRVersion3_0_1:
		return "3.0.1"
	case FHIRVersion3_0_2:
		return "3.0.2"
	case FHIRVersion3_3:
		return "3.3"
	case FHIRVersion3_3_0:
		return "3.3.0"
	case FHIRVersion3_5:
		return "3.5"
	case FHIRVersion3_5_0:
		return "3.5.0"
	case FHIRVersion4_0:
		return "4.0"
	case FHIRVersion4_0_0:
		return "4.0.0"
	case FHIRVersion4_0_1:
		return "4.0.1"
	case FHIRVersion4_1:
		return "4.1"
	case FHIRVersion4_1_0:
		return "4.1.0"
	case FHIRVersion4_2:
		return "4.2"
	case FHIRVersion4_2_0:
		return "4.2.0"
	case FHIRVersion4_3:
		return "4.3"
	case FHIRVersion4_3_0:
		return "4.3.0"
	case FHIRVersion4_3_0Cibuild:
		return "4.3.0-cibuild"
	case FHIRVersion4_3_0Snapshot1:
		return "4.3.0-snapshot1"
	case FHIRVersion4_4:
		return "4.4"
	case FHIRVersion4_4_0:
		return "4.4.0"
	case FHIRVersion4_5:
		return "4.5"
	case FHIRVersion4_5_0:
		return "4.5.0"
	case FHIRVersion4_6:
		return "4.6"
	case FHIRVersion4_6_0:
		return "4.6.0"
	case FHIRVersion5_0:
		return "5.0"
	case FHIRVersion5_0_0:
		return "5.0.0"
	case FHIRVersion5_0_0Cibuild:
		return "5.0.0-cibuild"
	case FHIRVersion5_0_0Snapshot1:
		return "5.0.0-snapshot1"
	case FHIRVersion5_0_0Snapshot2:
		return "5.0.0-snapshot2"
	case FHIRVersion5_0_0Ballot:
		return "5.0.0-ballot"
	case FHIRVersion5_0_0Snapshot3:
		return "5.0.0-snapshot3"
	case FHIRVersion5_0_0DraftFinal:
		return "5.0.0-draft-final"
	}
	return "<unknown>"
}
func (code FHIRVersion) Display() string {
	switch code {
	case FHIRVersion0_01:
		return "0.01"
	case FHIRVersion0_05:
		return "0.05"
	case FHIRVersion0_06:
		return "0.06"
	case FHIRVersion0_11:
		return "0.11"
	case FHIRVersion0_0:
		return "0.0"
	case FHIRVersion0_0_80:
		return "0.0.80"
	case FHIRVersion0_0_81:
		return "0.0.81"
	case FHIRVersion0_0_82:
		return "0.0.82"
	case FHIRVersion0_4:
		return "0.4"
	case FHIRVersion0_4_0:
		return "0.4.0"
	case FHIRVersion0_5:
		return "0.5"
	case FHIRVersion0_5_0:
		return "0.5.0"
	case FHIRVersion1_0:
		return "1.0"
	case FHIRVersion1_0_0:
		return "1.0.0"
	case FHIRVersion1_0_1:
		return "1.0.1"
	case FHIRVersion1_0_2:
		return "1.0.2"
	case FHIRVersion1_1:
		return "1.1"
	case FHIRVersion1_1_0:
		return "1.1.0"
	case FHIRVersion1_4:
		return "1.4"
	case FHIRVersion1_4_0:
		return "1.4.0"
	case FHIRVersion1_6:
		return "1.6"
	case FHIRVersion1_6_0:
		return "1.6.0"
	case FHIRVersion1_8:
		return "1.8"
	case FHIRVersion1_8_0:
		return "1.8.0"
	case FHIRVersion3_0:
		return "3.0"
	case FHIRVersion3_0_0:
		return "3.0.0"
	case FHIRVersion3_0_1:
		return "3.0.1"
	case FHIRVersion3_0_2:
		return "3.0.2"
	case FHIRVersion3_3:
		return "3.3"
	case FHIRVersion3_3_0:
		return "3.3.0"
	case FHIRVersion3_5:
		return "3.5"
	case FHIRVersion3_5_0:
		return "3.5.0"
	case FHIRVersion4_0:
		return "4.0"
	case FHIRVersion4_0_0:
		return "4.0.0"
	case FHIRVersion4_0_1:
		return "4.0.1"
	case FHIRVersion4_1:
		return "4.1"
	case FHIRVersion4_1_0:
		return "4.1.0"
	case FHIRVersion4_2:
		return "4.2"
	case FHIRVersion4_2_0:
		return "4.2.0"
	case FHIRVersion4_3:
		return "4.3"
	case FHIRVersion4_3_0:
		return "4.3.0"
	case FHIRVersion4_3_0Cibuild:
		return "4.3.0-cibuild"
	case FHIRVersion4_3_0Snapshot1:
		return "4.3.0-snapshot1"
	case FHIRVersion4_4:
		return "4.4"
	case FHIRVersion4_4_0:
		return "4.4.0"
	case FHIRVersion4_5:
		return "4.5"
	case FHIRVersion4_5_0:
		return "4.5.0"
	case FHIRVersion4_6:
		return "4.6"
	case FHIRVersion4_6_0:
		return "4.6.0"
	case FHIRVersion5_0:
		return "5.0"
	case FHIRVersion5_0_0:
		return "5.0.0"
	case FHIRVersion5_0_0Cibuild:
		return "5.0.0-cibuild"
	case FHIRVersion5_0_0Snapshot1:
		return "5.0.0-snapshot1"
	case FHIRVersion5_0_0Snapshot2:
		return "5.0.0-snapshot2"
	case FHIRVersion5_0_0Ballot:
		return "5.0.0-ballot"
	case FHIRVersion5_0_0Snapshot3:
		return "5.0.0-snapshot3"
	case FHIRVersion5_0_0DraftFinal:
		return "5.0.0-draft-final"
	}
	return "<unknown>"
}
func (code FHIRVersion) Definition() string {
	switch code {
	case FHIRVersion0_01:
		return "Oldest archived version of FHIR."
	case FHIRVersion0_05:
		return "1st Draft for Comment (Sept 2012 Ballot)."
	case FHIRVersion0_06:
		return "2nd Draft for Comment (January 2013 Ballot)."
	case FHIRVersion0_11:
		return "DSTU 1 Ballot version."
	case FHIRVersion0_0:
		return "DSTU 1 version."
	case FHIRVersion0_0_80:
		return "DSTU 1 Official version."
	case FHIRVersion0_0_81:
		return "DSTU 1 Official version Technical Errata #1."
	case FHIRVersion0_0_82:
		return "DSTU 1 Official version Technical Errata #2."
	case FHIRVersion0_4:
		return "January 2015 Ballot."
	case FHIRVersion0_4_0:
		return "Draft For Comment (January 2015 Ballot)."
	case FHIRVersion0_5:
		return "May 2015 Ballot."
	case FHIRVersion0_5_0:
		return "DSTU 2 Ballot version (May 2015 Ballot)."
	case FHIRVersion1_0:
		return "DSTU 2 version."
	case FHIRVersion1_0_0:
		return "DSTU 2 QA Preview + CQIF Ballot (Sep 2015)."
	case FHIRVersion1_0_1:
		return "DSTU 2 (Official version)."
	case FHIRVersion1_0_2:
		return "DSTU 2 (Official version) with 1 technical errata."
	case FHIRVersion1_1:
		return "GAO Ballot version."
	case FHIRVersion1_1_0:
		return "GAO Ballot + draft changes to main FHIR standard."
	case FHIRVersion1_4:
		return "Connectathon 12 (Montreal) version."
	case FHIRVersion1_4_0:
		return "CQF on FHIR Ballot + Connectathon 12 (Montreal)."
	case FHIRVersion1_6:
		return "Connectathon 13 (Baltimore) version."
	case FHIRVersion1_6_0:
		return "FHIR STU3 Ballot + Connectathon 13 (Baltimore)."
	case FHIRVersion1_8:
		return "Connectathon 14 (San Antonio) version."
	case FHIRVersion1_8_0:
		return "FHIR STU3 Candidate + Connectathon 14 (San Antonio)."
	case FHIRVersion3_0:
		return "STU3 version."
	case FHIRVersion3_0_0:
		return "FHIR Release 3 (STU)."
	case FHIRVersion3_0_1:
		return "FHIR Release 3 (STU) with 1 technical errata."
	case FHIRVersion3_0_2:
		return "FHIR Release 3 (STU) with 2 technical errata."
	case FHIRVersion3_3:
		return "R4 Ballot #1 version."
	case FHIRVersion3_3_0:
		return "R4 Ballot #1 + Connectaton 18 (Cologne)."
	case FHIRVersion3_5:
		return "R4 Ballot #2 version."
	case FHIRVersion3_5_0:
		return "R4 Ballot #2 + Connectathon 19 (Baltimore)."
	case FHIRVersion4_0:
		return "R4 version."
	case FHIRVersion4_0_0:
		return "FHIR Release 4 (Normative + STU)."
	case FHIRVersion4_0_1:
		return "FHIR Release 4 (Normative + STU) with 1 technical errata."
	case FHIRVersion4_1:
		return "R4B Ballot #1 version."
	case FHIRVersion4_1_0:
		return "R4B Ballot #1 + Connectathon 27 (Virtual)."
	case FHIRVersion4_2:
		return "R5 Preview #1 version."
	case FHIRVersion4_2_0:
		return "R5 Preview #1 + Connectathon 23 (Sydney)."
	case FHIRVersion4_3:
		return "R4B version."
	case FHIRVersion4_3_0:
		return "FHIR Release 4B (Normative + STU)."
	case FHIRVersion4_3_0Cibuild:
		return "FHIR Release 4B CI-Builld."
	case FHIRVersion4_3_0Snapshot1:
		return "FHIR Release 4B Snapshot #1."
	case FHIRVersion4_4:
		return "R5 Preview #2 version."
	case FHIRVersion4_4_0:
		return "R5 Preview #2 + Connectathon 24 (Virtual)."
	case FHIRVersion4_5:
		return "R5 Preview #3 version."
	case FHIRVersion4_5_0:
		return "R5 Preview #3 + Connectathon 25 (Virtual)."
	case FHIRVersion4_6:
		return "R5 Draft Ballot version."
	case FHIRVersion4_6_0:
		return "R5 Draft Ballot + Connectathon 27 (Virtual)."
	case FHIRVersion5_0:
		return "R5 Versions."
	case FHIRVersion5_0_0:
		return "R5 Final Version."
	case FHIRVersion5_0_0Cibuild:
		return "R5 Rolling ci-build."
	case FHIRVersion5_0_0Snapshot1:
		return "R5 Preview #2."
	case FHIRVersion5_0_0Snapshot2:
		return "R5 Interim tooling stage."
	case FHIRVersion5_0_0Ballot:
		return "R5 Ballot."
	case FHIRVersion5_0_0Snapshot3:
		return "R5 January 2023 Staging Release + Connectathon 32."
	case FHIRVersion5_0_0DraftFinal:
		return "R5 Final QA."
	}
	return "<unknown>"
}
