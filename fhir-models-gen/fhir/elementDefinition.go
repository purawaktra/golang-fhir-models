// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// ElementDefinition is documented here http://hl7.org/fhir/StructureDefinition/ElementDefinition
type ElementDefinition struct {
	Id                                *string                       `bson:"id,omitempty" json:"id,omitempty"`
	Extension                         []Extension                   `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension                 []Extension                   `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Path                              string                        `bson:"path" json:"path"`
	Representation                    []fhir.PropertyRepresentation `bson:"representation,omitempty" json:"representation,omitempty"`
	SliceName                         *string                       `bson:"sliceName,omitempty" json:"sliceName,omitempty"`
	SliceIsConstraining               *bool                         `bson:"sliceIsConstraining,omitempty" json:"sliceIsConstraining,omitempty"`
	Label                             *string                       `bson:"label,omitempty" json:"label,omitempty"`
	Code                              []Coding                      `bson:"code,omitempty" json:"code,omitempty"`
	Slicing                           *ElementDefinitionSlicing     `bson:"slicing,omitempty" json:"slicing,omitempty"`
	Short                             *string                       `bson:"short,omitempty" json:"short,omitempty"`
	Definition                        *string                       `bson:"definition,omitempty" json:"definition,omitempty"`
	Comment                           *string                       `bson:"comment,omitempty" json:"comment,omitempty"`
	Requirements                      *string                       `bson:"requirements,omitempty" json:"requirements,omitempty"`
	Alias                             []string                      `bson:"alias,omitempty" json:"alias,omitempty"`
	Min                               *int                          `bson:"min,omitempty" json:"min,omitempty"`
	Max                               *string                       `bson:"max,omitempty" json:"max,omitempty"`
	Base                              *ElementDefinitionBase        `bson:"base,omitempty" json:"base,omitempty"`
	ContentReference                  *string                       `bson:"contentReference,omitempty" json:"contentReference,omitempty"`
	Type                              []ElementDefinitionType       `bson:"type,omitempty" json:"type,omitempty"`
	DefaultValueBase64Binary          *string                       `bson:"defaultValueBase64Binary,omitempty" json:"defaultValueBase64Binary,omitempty"`
	DefaultValueBoolean               *bool                         `bson:"defaultValueBoolean,omitempty" json:"defaultValueBoolean,omitempty"`
	DefaultValueCanonical             *string                       `bson:"defaultValueCanonical,omitempty" json:"defaultValueCanonical,omitempty"`
	DefaultValueCode                  *string                       `bson:"defaultValueCode,omitempty" json:"defaultValueCode,omitempty"`
	DefaultValueDate                  *string                       `bson:"defaultValueDate,omitempty" json:"defaultValueDate,omitempty"`
	DefaultValueDateTime              *string                       `bson:"defaultValueDateTime,omitempty" json:"defaultValueDateTime,omitempty"`
	DefaultValueDecimal               *json.Number                  `bson:"defaultValueDecimal,omitempty" json:"defaultValueDecimal,omitempty"`
	DefaultValueId                    *string                       `bson:"defaultValueId,omitempty" json:"defaultValueId,omitempty"`
	DefaultValueInstant               *string                       `bson:"defaultValueInstant,omitempty" json:"defaultValueInstant,omitempty"`
	DefaultValueInteger               *int                          `bson:"defaultValueInteger,omitempty" json:"defaultValueInteger,omitempty"`
	DefaultValueInteger64             *integer64                    `bson:"defaultValueInteger64,omitempty" json:"defaultValueInteger64,omitempty"`
	DefaultValueMarkdown              *string                       `bson:"defaultValueMarkdown,omitempty" json:"defaultValueMarkdown,omitempty"`
	DefaultValueOid                   *string                       `bson:"defaultValueOid,omitempty" json:"defaultValueOid,omitempty"`
	DefaultValuePositiveInt           *int                          `bson:"defaultValuePositiveInt,omitempty" json:"defaultValuePositiveInt,omitempty"`
	DefaultValueString                *string                       `bson:"defaultValueString,omitempty" json:"defaultValueString,omitempty"`
	DefaultValueTime                  *string                       `bson:"defaultValueTime,omitempty" json:"defaultValueTime,omitempty"`
	DefaultValueUnsignedInt           *int                          `bson:"defaultValueUnsignedInt,omitempty" json:"defaultValueUnsignedInt,omitempty"`
	DefaultValueUri                   *string                       `bson:"defaultValueUri,omitempty" json:"defaultValueUri,omitempty"`
	DefaultValueUrl                   *string                       `bson:"defaultValueUrl,omitempty" json:"defaultValueUrl,omitempty"`
	DefaultValueUuid                  *string                       `bson:"defaultValueUuid,omitempty" json:"defaultValueUuid,omitempty"`
	DefaultValueAddress               *Address                      `bson:"defaultValueAddress,omitempty" json:"defaultValueAddress,omitempty"`
	DefaultValueAge                   *Age                          `bson:"defaultValueAge,omitempty" json:"defaultValueAge,omitempty"`
	DefaultValueAnnotation            *Annotation                   `bson:"defaultValueAnnotation,omitempty" json:"defaultValueAnnotation,omitempty"`
	DefaultValueAttachment            *Attachment                   `bson:"defaultValueAttachment,omitempty" json:"defaultValueAttachment,omitempty"`
	DefaultValueCodeableConcept       *CodeableConcept              `bson:"defaultValueCodeableConcept,omitempty" json:"defaultValueCodeableConcept,omitempty"`
	DefaultValueCodeableReference     *CodeableReference            `bson:"defaultValueCodeableReference,omitempty" json:"defaultValueCodeableReference,omitempty"`
	DefaultValueCoding                *Coding                       `bson:"defaultValueCoding,omitempty" json:"defaultValueCoding,omitempty"`
	DefaultValueContactPoint          *ContactPoint                 `bson:"defaultValueContactPoint,omitempty" json:"defaultValueContactPoint,omitempty"`
	DefaultValueCount                 *Count                        `bson:"defaultValueCount,omitempty" json:"defaultValueCount,omitempty"`
	DefaultValueDistance              *Distance                     `bson:"defaultValueDistance,omitempty" json:"defaultValueDistance,omitempty"`
	DefaultValueDuration              *Duration                     `bson:"defaultValueDuration,omitempty" json:"defaultValueDuration,omitempty"`
	DefaultValueHumanName             *HumanName                    `bson:"defaultValueHumanName,omitempty" json:"defaultValueHumanName,omitempty"`
	DefaultValueIdentifier            *Identifier                   `bson:"defaultValueIdentifier,omitempty" json:"defaultValueIdentifier,omitempty"`
	DefaultValueMoney                 *fhir.Money                   `bson:"defaultValueMoney,omitempty" json:"defaultValueMoney,omitempty"`
	DefaultValuePeriod                *fhir.Period                  `bson:"defaultValuePeriod,omitempty" json:"defaultValuePeriod,omitempty"`
	DefaultValueQuantity              *fhir.Quantity                `bson:"defaultValueQuantity,omitempty" json:"defaultValueQuantity,omitempty"`
	DefaultValueRange                 *fhir.Range                   `bson:"defaultValueRange,omitempty" json:"defaultValueRange,omitempty"`
	DefaultValueRatio                 *fhir.Ratio                   `bson:"defaultValueRatio,omitempty" json:"defaultValueRatio,omitempty"`
	DefaultValueRatioRange            *fhir.RatioRange              `bson:"defaultValueRatioRange,omitempty" json:"defaultValueRatioRange,omitempty"`
	DefaultValueReference             *fhir.Reference               `bson:"defaultValueReference,omitempty" json:"defaultValueReference,omitempty"`
	DefaultValueSampledData           *fhir.SampledData             `bson:"defaultValueSampledData,omitempty" json:"defaultValueSampledData,omitempty"`
	DefaultValueSignature             *fhir.Signature               `bson:"defaultValueSignature,omitempty" json:"defaultValueSignature,omitempty"`
	DefaultValueTiming                *fhir.Timing                  `bson:"defaultValueTiming,omitempty" json:"defaultValueTiming,omitempty"`
	DefaultValueContactDetail         *ContactDetail                `bson:"defaultValueContactDetail,omitempty" json:"defaultValueContactDetail,omitempty"`
	DefaultValueDataRequirement       *DataRequirement              `bson:"defaultValueDataRequirement,omitempty" json:"defaultValueDataRequirement,omitempty"`
	DefaultValueExpression            *Expression                   `bson:"defaultValueExpression,omitempty" json:"defaultValueExpression,omitempty"`
	DefaultValueParameterDefinition   *fhir.ParameterDefinition     `bson:"defaultValueParameterDefinition,omitempty" json:"defaultValueParameterDefinition,omitempty"`
	DefaultValueRelatedArtifact       *fhir.RelatedArtifact         `bson:"defaultValueRelatedArtifact,omitempty" json:"defaultValueRelatedArtifact,omitempty"`
	DefaultValueTriggerDefinition     *fhir.TriggerDefinition       `bson:"defaultValueTriggerDefinition,omitempty" json:"defaultValueTriggerDefinition,omitempty"`
	DefaultValueUsageContext          *fhir.UsageContext            `bson:"defaultValueUsageContext,omitempty" json:"defaultValueUsageContext,omitempty"`
	DefaultValueAvailability          *Availability                 `bson:"defaultValueAvailability,omitempty" json:"defaultValueAvailability,omitempty"`
	DefaultValueExtendedContactDetail *ExtendedContactDetail        `bson:"defaultValueExtendedContactDetail,omitempty" json:"defaultValueExtendedContactDetail,omitempty"`
	DefaultValueDosage                *Dosage                       `bson:"defaultValueDosage,omitempty" json:"defaultValueDosage,omitempty"`
	DefaultValueMeta                  *fhir.Meta                    `bson:"defaultValueMeta,omitempty" json:"defaultValueMeta,omitempty"`
	MeaningWhenMissing                *string                       `bson:"meaningWhenMissing,omitempty" json:"meaningWhenMissing,omitempty"`
	OrderMeaning                      *string                       `bson:"orderMeaning,omitempty" json:"orderMeaning,omitempty"`
	FixedBase64Binary                 *string                       `bson:"fixedBase64Binary,omitempty" json:"fixedBase64Binary,omitempty"`
	FixedBoolean                      *bool                         `bson:"fixedBoolean,omitempty" json:"fixedBoolean,omitempty"`
	FixedCanonical                    *string                       `bson:"fixedCanonical,omitempty" json:"fixedCanonical,omitempty"`
	FixedCode                         *string                       `bson:"fixedCode,omitempty" json:"fixedCode,omitempty"`
	FixedDate                         *string                       `bson:"fixedDate,omitempty" json:"fixedDate,omitempty"`
	FixedDateTime                     *string                       `bson:"fixedDateTime,omitempty" json:"fixedDateTime,omitempty"`
	FixedDecimal                      *json.Number                  `bson:"fixedDecimal,omitempty" json:"fixedDecimal,omitempty"`
	FixedId                           *string                       `bson:"fixedId,omitempty" json:"fixedId,omitempty"`
	FixedInstant                      *string                       `bson:"fixedInstant,omitempty" json:"fixedInstant,omitempty"`
	FixedInteger                      *int                          `bson:"fixedInteger,omitempty" json:"fixedInteger,omitempty"`
	FixedInteger64                    *integer64                    `bson:"fixedInteger64,omitempty" json:"fixedInteger64,omitempty"`
	FixedMarkdown                     *string                       `bson:"fixedMarkdown,omitempty" json:"fixedMarkdown,omitempty"`
	FixedOid                          *string                       `bson:"fixedOid,omitempty" json:"fixedOid,omitempty"`
	FixedPositiveInt                  *int                          `bson:"fixedPositiveInt,omitempty" json:"fixedPositiveInt,omitempty"`
	FixedString                       *string                       `bson:"fixedString,omitempty" json:"fixedString,omitempty"`
	FixedTime                         *string                       `bson:"fixedTime,omitempty" json:"fixedTime,omitempty"`
	FixedUnsignedInt                  *int                          `bson:"fixedUnsignedInt,omitempty" json:"fixedUnsignedInt,omitempty"`
	FixedUri                          *string                       `bson:"fixedUri,omitempty" json:"fixedUri,omitempty"`
	FixedUrl                          *string                       `bson:"fixedUrl,omitempty" json:"fixedUrl,omitempty"`
	FixedUuid                         *string                       `bson:"fixedUuid,omitempty" json:"fixedUuid,omitempty"`
	FixedAddress                      *Address                      `bson:"fixedAddress,omitempty" json:"fixedAddress,omitempty"`
	FixedAge                          *Age                          `bson:"fixedAge,omitempty" json:"fixedAge,omitempty"`
	FixedAnnotation                   *Annotation                   `bson:"fixedAnnotation,omitempty" json:"fixedAnnotation,omitempty"`
	FixedAttachment                   *Attachment                   `bson:"fixedAttachment,omitempty" json:"fixedAttachment,omitempty"`
	FixedCodeableConcept              *CodeableConcept              `bson:"fixedCodeableConcept,omitempty" json:"fixedCodeableConcept,omitempty"`
	FixedCodeableReference            *CodeableReference            `bson:"fixedCodeableReference,omitempty" json:"fixedCodeableReference,omitempty"`
	FixedCoding                       *Coding                       `bson:"fixedCoding,omitempty" json:"fixedCoding,omitempty"`
	FixedContactPoint                 *ContactPoint                 `bson:"fixedContactPoint,omitempty" json:"fixedContactPoint,omitempty"`
	FixedCount                        *Count                        `bson:"fixedCount,omitempty" json:"fixedCount,omitempty"`
	FixedDistance                     *Distance                     `bson:"fixedDistance,omitempty" json:"fixedDistance,omitempty"`
	FixedDuration                     *Duration                     `bson:"fixedDuration,omitempty" json:"fixedDuration,omitempty"`
	FixedHumanName                    *HumanName                    `bson:"fixedHumanName,omitempty" json:"fixedHumanName,omitempty"`
	FixedIdentifier                   *Identifier                   `bson:"fixedIdentifier,omitempty" json:"fixedIdentifier,omitempty"`
	FixedMoney                        *fhir.Money                   `bson:"fixedMoney,omitempty" json:"fixedMoney,omitempty"`
	FixedPeriod                       *fhir.Period                  `bson:"fixedPeriod,omitempty" json:"fixedPeriod,omitempty"`
	FixedQuantity                     *fhir.Quantity                `bson:"fixedQuantity,omitempty" json:"fixedQuantity,omitempty"`
	FixedRange                        *fhir.Range                   `bson:"fixedRange,omitempty" json:"fixedRange,omitempty"`
	FixedRatio                        *fhir.Ratio                   `bson:"fixedRatio,omitempty" json:"fixedRatio,omitempty"`
	FixedRatioRange                   *fhir.RatioRange              `bson:"fixedRatioRange,omitempty" json:"fixedRatioRange,omitempty"`
	FixedReference                    *fhir.Reference               `bson:"fixedReference,omitempty" json:"fixedReference,omitempty"`
	FixedSampledData                  *fhir.SampledData             `bson:"fixedSampledData,omitempty" json:"fixedSampledData,omitempty"`
	FixedSignature                    *fhir.Signature               `bson:"fixedSignature,omitempty" json:"fixedSignature,omitempty"`
	FixedTiming                       *fhir.Timing                  `bson:"fixedTiming,omitempty" json:"fixedTiming,omitempty"`
	FixedContactDetail                *ContactDetail                `bson:"fixedContactDetail,omitempty" json:"fixedContactDetail,omitempty"`
	FixedDataRequirement              *DataRequirement              `bson:"fixedDataRequirement,omitempty" json:"fixedDataRequirement,omitempty"`
	FixedExpression                   *Expression                   `bson:"fixedExpression,omitempty" json:"fixedExpression,omitempty"`
	FixedParameterDefinition          *fhir.ParameterDefinition     `bson:"fixedParameterDefinition,omitempty" json:"fixedParameterDefinition,omitempty"`
	FixedRelatedArtifact              *fhir.RelatedArtifact         `bson:"fixedRelatedArtifact,omitempty" json:"fixedRelatedArtifact,omitempty"`
	FixedTriggerDefinition            *fhir.TriggerDefinition       `bson:"fixedTriggerDefinition,omitempty" json:"fixedTriggerDefinition,omitempty"`
	FixedUsageContext                 *fhir.UsageContext            `bson:"fixedUsageContext,omitempty" json:"fixedUsageContext,omitempty"`
	FixedAvailability                 *Availability                 `bson:"fixedAvailability,omitempty" json:"fixedAvailability,omitempty"`
	FixedExtendedContactDetail        *ExtendedContactDetail        `bson:"fixedExtendedContactDetail,omitempty" json:"fixedExtendedContactDetail,omitempty"`
	FixedDosage                       *Dosage                       `bson:"fixedDosage,omitempty" json:"fixedDosage,omitempty"`
	FixedMeta                         *fhir.Meta                    `bson:"fixedMeta,omitempty" json:"fixedMeta,omitempty"`
	PatternBase64Binary               *string                       `bson:"patternBase64Binary,omitempty" json:"patternBase64Binary,omitempty"`
	PatternBoolean                    *bool                         `bson:"patternBoolean,omitempty" json:"patternBoolean,omitempty"`
	PatternCanonical                  *string                       `bson:"patternCanonical,omitempty" json:"patternCanonical,omitempty"`
	PatternCode                       *string                       `bson:"patternCode,omitempty" json:"patternCode,omitempty"`
	PatternDate                       *string                       `bson:"patternDate,omitempty" json:"patternDate,omitempty"`
	PatternDateTime                   *string                       `bson:"patternDateTime,omitempty" json:"patternDateTime,omitempty"`
	PatternDecimal                    *json.Number                  `bson:"patternDecimal,omitempty" json:"patternDecimal,omitempty"`
	PatternId                         *string                       `bson:"patternId,omitempty" json:"patternId,omitempty"`
	PatternInstant                    *string                       `bson:"patternInstant,omitempty" json:"patternInstant,omitempty"`
	PatternInteger                    *int                          `bson:"patternInteger,omitempty" json:"patternInteger,omitempty"`
	PatternInteger64                  *integer64                    `bson:"patternInteger64,omitempty" json:"patternInteger64,omitempty"`
	PatternMarkdown                   *string                       `bson:"patternMarkdown,omitempty" json:"patternMarkdown,omitempty"`
	PatternOid                        *string                       `bson:"patternOid,omitempty" json:"patternOid,omitempty"`
	PatternPositiveInt                *int                          `bson:"patternPositiveInt,omitempty" json:"patternPositiveInt,omitempty"`
	PatternString                     *string                       `bson:"patternString,omitempty" json:"patternString,omitempty"`
	PatternTime                       *string                       `bson:"patternTime,omitempty" json:"patternTime,omitempty"`
	PatternUnsignedInt                *int                          `bson:"patternUnsignedInt,omitempty" json:"patternUnsignedInt,omitempty"`
	PatternUri                        *string                       `bson:"patternUri,omitempty" json:"patternUri,omitempty"`
	PatternUrl                        *string                       `bson:"patternUrl,omitempty" json:"patternUrl,omitempty"`
	PatternUuid                       *string                       `bson:"patternUuid,omitempty" json:"patternUuid,omitempty"`
	PatternAddress                    *Address                      `bson:"patternAddress,omitempty" json:"patternAddress,omitempty"`
	PatternAge                        *Age                          `bson:"patternAge,omitempty" json:"patternAge,omitempty"`
	PatternAnnotation                 *Annotation                   `bson:"patternAnnotation,omitempty" json:"patternAnnotation,omitempty"`
	PatternAttachment                 *Attachment                   `bson:"patternAttachment,omitempty" json:"patternAttachment,omitempty"`
	PatternCodeableConcept            *CodeableConcept              `bson:"patternCodeableConcept,omitempty" json:"patternCodeableConcept,omitempty"`
	PatternCodeableReference          *CodeableReference            `bson:"patternCodeableReference,omitempty" json:"patternCodeableReference,omitempty"`
	PatternCoding                     *Coding                       `bson:"patternCoding,omitempty" json:"patternCoding,omitempty"`
	PatternContactPoint               *ContactPoint                 `bson:"patternContactPoint,omitempty" json:"patternContactPoint,omitempty"`
	PatternCount                      *Count                        `bson:"patternCount,omitempty" json:"patternCount,omitempty"`
	PatternDistance                   *Distance                     `bson:"patternDistance,omitempty" json:"patternDistance,omitempty"`
	PatternDuration                   *Duration                     `bson:"patternDuration,omitempty" json:"patternDuration,omitempty"`
	PatternHumanName                  *HumanName                    `bson:"patternHumanName,omitempty" json:"patternHumanName,omitempty"`
	PatternIdentifier                 *Identifier                   `bson:"patternIdentifier,omitempty" json:"patternIdentifier,omitempty"`
	PatternMoney                      *fhir.Money                   `bson:"patternMoney,omitempty" json:"patternMoney,omitempty"`
	PatternPeriod                     *fhir.Period                  `bson:"patternPeriod,omitempty" json:"patternPeriod,omitempty"`
	PatternQuantity                   *fhir.Quantity                `bson:"patternQuantity,omitempty" json:"patternQuantity,omitempty"`
	PatternRange                      *fhir.Range                   `bson:"patternRange,omitempty" json:"patternRange,omitempty"`
	PatternRatio                      *fhir.Ratio                   `bson:"patternRatio,omitempty" json:"patternRatio,omitempty"`
	PatternRatioRange                 *fhir.RatioRange              `bson:"patternRatioRange,omitempty" json:"patternRatioRange,omitempty"`
	PatternReference                  *fhir.Reference               `bson:"patternReference,omitempty" json:"patternReference,omitempty"`
	PatternSampledData                *fhir.SampledData             `bson:"patternSampledData,omitempty" json:"patternSampledData,omitempty"`
	PatternSignature                  *fhir.Signature               `bson:"patternSignature,omitempty" json:"patternSignature,omitempty"`
	PatternTiming                     *fhir.Timing                  `bson:"patternTiming,omitempty" json:"patternTiming,omitempty"`
	PatternContactDetail              *ContactDetail                `bson:"patternContactDetail,omitempty" json:"patternContactDetail,omitempty"`
	PatternDataRequirement            *DataRequirement              `bson:"patternDataRequirement,omitempty" json:"patternDataRequirement,omitempty"`
	PatternExpression                 *Expression                   `bson:"patternExpression,omitempty" json:"patternExpression,omitempty"`
	PatternParameterDefinition        *fhir.ParameterDefinition     `bson:"patternParameterDefinition,omitempty" json:"patternParameterDefinition,omitempty"`
	PatternRelatedArtifact            *fhir.RelatedArtifact         `bson:"patternRelatedArtifact,omitempty" json:"patternRelatedArtifact,omitempty"`
	PatternTriggerDefinition          *fhir.TriggerDefinition       `bson:"patternTriggerDefinition,omitempty" json:"patternTriggerDefinition,omitempty"`
	PatternUsageContext               *fhir.UsageContext            `bson:"patternUsageContext,omitempty" json:"patternUsageContext,omitempty"`
	PatternAvailability               *Availability                 `bson:"patternAvailability,omitempty" json:"patternAvailability,omitempty"`
	PatternExtendedContactDetail      *ExtendedContactDetail        `bson:"patternExtendedContactDetail,omitempty" json:"patternExtendedContactDetail,omitempty"`
	PatternDosage                     *Dosage                       `bson:"patternDosage,omitempty" json:"patternDosage,omitempty"`
	PatternMeta                       *fhir.Meta                    `bson:"patternMeta,omitempty" json:"patternMeta,omitempty"`
	Example                           []ElementDefinitionExample    `bson:"example,omitempty" json:"example,omitempty"`
	MinValueDate                      *string                       `bson:"minValueDate,omitempty" json:"minValueDate,omitempty"`
	MinValueDateTime                  *string                       `bson:"minValueDateTime,omitempty" json:"minValueDateTime,omitempty"`
	MinValueInstant                   *string                       `bson:"minValueInstant,omitempty" json:"minValueInstant,omitempty"`
	MinValueTime                      *string                       `bson:"minValueTime,omitempty" json:"minValueTime,omitempty"`
	MinValueDecimal                   *json.Number                  `bson:"minValueDecimal,omitempty" json:"minValueDecimal,omitempty"`
	MinValueInteger                   *int                          `bson:"minValueInteger,omitempty" json:"minValueInteger,omitempty"`
	MinValueInteger64                 *integer64                    `bson:"minValueInteger64,omitempty" json:"minValueInteger64,omitempty"`
	MinValuePositiveInt               *int                          `bson:"minValuePositiveInt,omitempty" json:"minValuePositiveInt,omitempty"`
	MinValueUnsignedInt               *int                          `bson:"minValueUnsignedInt,omitempty" json:"minValueUnsignedInt,omitempty"`
	MinValueQuantity                  *fhir.Quantity                `bson:"minValueQuantity,omitempty" json:"minValueQuantity,omitempty"`
	MaxValueDate                      *string                       `bson:"maxValueDate,omitempty" json:"maxValueDate,omitempty"`
	MaxValueDateTime                  *string                       `bson:"maxValueDateTime,omitempty" json:"maxValueDateTime,omitempty"`
	MaxValueInstant                   *string                       `bson:"maxValueInstant,omitempty" json:"maxValueInstant,omitempty"`
	MaxValueTime                      *string                       `bson:"maxValueTime,omitempty" json:"maxValueTime,omitempty"`
	MaxValueDecimal                   *json.Number                  `bson:"maxValueDecimal,omitempty" json:"maxValueDecimal,omitempty"`
	MaxValueInteger                   *int                          `bson:"maxValueInteger,omitempty" json:"maxValueInteger,omitempty"`
	MaxValueInteger64                 *integer64                    `bson:"maxValueInteger64,omitempty" json:"maxValueInteger64,omitempty"`
	MaxValuePositiveInt               *int                          `bson:"maxValuePositiveInt,omitempty" json:"maxValuePositiveInt,omitempty"`
	MaxValueUnsignedInt               *int                          `bson:"maxValueUnsignedInt,omitempty" json:"maxValueUnsignedInt,omitempty"`
	MaxValueQuantity                  *fhir.Quantity                `bson:"maxValueQuantity,omitempty" json:"maxValueQuantity,omitempty"`
	MaxLength                         *int                          `bson:"maxLength,omitempty" json:"maxLength,omitempty"`
	Condition                         []string                      `bson:"condition,omitempty" json:"condition,omitempty"`
	Constraint                        []ElementDefinitionConstraint `bson:"constraint,omitempty" json:"constraint,omitempty"`
	MustHaveValue                     *bool                         `bson:"mustHaveValue,omitempty" json:"mustHaveValue,omitempty"`
	ValueAlternatives                 []string                      `bson:"valueAlternatives,omitempty" json:"valueAlternatives,omitempty"`
	MustSupport                       *bool                         `bson:"mustSupport,omitempty" json:"mustSupport,omitempty"`
	IsModifier                        *bool                         `bson:"isModifier,omitempty" json:"isModifier,omitempty"`
	IsModifierReason                  *string                       `bson:"isModifierReason,omitempty" json:"isModifierReason,omitempty"`
	IsSummary                         *bool                         `bson:"isSummary,omitempty" json:"isSummary,omitempty"`
	Binding                           *ElementDefinitionBinding     `bson:"binding,omitempty" json:"binding,omitempty"`
	Mapping                           []ElementDefinitionMapping    `bson:"mapping,omitempty" json:"mapping,omitempty"`
}
type ElementDefinitionSlicing struct {
	Id            *string                                 `bson:"id,omitempty" json:"id,omitempty"`
	Extension     []Extension                             `bson:"extension,omitempty" json:"extension,omitempty"`
	Discriminator []ElementDefinitionSlicingDiscriminator `bson:"discriminator,omitempty" json:"discriminator,omitempty"`
	Description   *string                                 `bson:"description,omitempty" json:"description,omitempty"`
	Ordered       *bool                                   `bson:"ordered,omitempty" json:"ordered,omitempty"`
	Rules         fhir.SlicingRules                       `bson:"rules" json:"rules"`
}
type ElementDefinitionSlicingDiscriminator struct {
	Id        *string           `bson:"id,omitempty" json:"id,omitempty"`
	Extension []Extension       `bson:"extension,omitempty" json:"extension,omitempty"`
	Type      DiscriminatorType `bson:"type" json:"type"`
	Path      string            `bson:"path" json:"path"`
}
type ElementDefinitionBase struct {
	Id        *string     `bson:"id,omitempty" json:"id,omitempty"`
	Extension []Extension `bson:"extension,omitempty" json:"extension,omitempty"`
	Path      string      `bson:"path" json:"path"`
	Min       int         `bson:"min" json:"min"`
	Max       string      `bson:"max" json:"max"`
}
type ElementDefinitionType struct {
	Id            *string                     `bson:"id,omitempty" json:"id,omitempty"`
	Extension     []Extension                 `bson:"extension,omitempty" json:"extension,omitempty"`
	Code          string                      `bson:"code" json:"code"`
	Profile       []string                    `bson:"profile,omitempty" json:"profile,omitempty"`
	TargetProfile []string                    `bson:"targetProfile,omitempty" json:"targetProfile,omitempty"`
	Aggregation   []AggregationMode           `bson:"aggregation,omitempty" json:"aggregation,omitempty"`
	Versioning    *fhir.ReferenceVersionRules `bson:"versioning,omitempty" json:"versioning,omitempty"`
}
type ElementDefinitionExample struct {
	Id                         *string                  `bson:"id,omitempty" json:"id,omitempty"`
	Extension                  []Extension              `bson:"extension,omitempty" json:"extension,omitempty"`
	Label                      string                   `bson:"label" json:"label"`
	ValueBase64Binary          string                   `bson:"valueBase64Binary" json:"valueBase64Binary"`
	ValueBoolean               bool                     `bson:"valueBoolean" json:"valueBoolean"`
	ValueCanonical             string                   `bson:"valueCanonical" json:"valueCanonical"`
	ValueCode                  string                   `bson:"valueCode" json:"valueCode"`
	ValueDate                  string                   `bson:"valueDate" json:"valueDate"`
	ValueDateTime              string                   `bson:"valueDateTime" json:"valueDateTime"`
	ValueDecimal               json.Number              `bson:"valueDecimal" json:"valueDecimal"`
	ValueId                    string                   `bson:"valueId" json:"valueId"`
	ValueInstant               string                   `bson:"valueInstant" json:"valueInstant"`
	ValueInteger               int                      `bson:"valueInteger" json:"valueInteger"`
	ValueInteger64             integer64                `bson:"valueInteger64" json:"valueInteger64"`
	ValueMarkdown              string                   `bson:"valueMarkdown" json:"valueMarkdown"`
	ValueOid                   string                   `bson:"valueOid" json:"valueOid"`
	ValuePositiveInt           int                      `bson:"valuePositiveInt" json:"valuePositiveInt"`
	ValueString                string                   `bson:"valueString" json:"valueString"`
	ValueTime                  string                   `bson:"valueTime" json:"valueTime"`
	ValueUnsignedInt           int                      `bson:"valueUnsignedInt" json:"valueUnsignedInt"`
	ValueUri                   string                   `bson:"valueUri" json:"valueUri"`
	ValueUrl                   string                   `bson:"valueUrl" json:"valueUrl"`
	ValueUuid                  string                   `bson:"valueUuid" json:"valueUuid"`
	ValueAddress               Address                  `bson:"valueAddress" json:"valueAddress"`
	ValueAge                   Age                      `bson:"valueAge" json:"valueAge"`
	ValueAnnotation            Annotation               `bson:"valueAnnotation" json:"valueAnnotation"`
	ValueAttachment            Attachment               `bson:"valueAttachment" json:"valueAttachment"`
	ValueCodeableConcept       CodeableConcept          `bson:"valueCodeableConcept" json:"valueCodeableConcept"`
	ValueCodeableReference     CodeableReference        `bson:"valueCodeableReference" json:"valueCodeableReference"`
	ValueCoding                Coding                   `bson:"valueCoding" json:"valueCoding"`
	ValueContactPoint          ContactPoint             `bson:"valueContactPoint" json:"valueContactPoint"`
	ValueCount                 Count                    `bson:"valueCount" json:"valueCount"`
	ValueDistance              Distance                 `bson:"valueDistance" json:"valueDistance"`
	ValueDuration              Duration                 `bson:"valueDuration" json:"valueDuration"`
	ValueHumanName             HumanName                `bson:"valueHumanName" json:"valueHumanName"`
	ValueIdentifier            Identifier               `bson:"valueIdentifier" json:"valueIdentifier"`
	ValueMoney                 fhir.Money               `bson:"valueMoney" json:"valueMoney"`
	ValuePeriod                fhir.Period              `bson:"valuePeriod" json:"valuePeriod"`
	ValueQuantity              fhir.Quantity            `bson:"valueQuantity" json:"valueQuantity"`
	ValueRange                 fhir.Range               `bson:"valueRange" json:"valueRange"`
	ValueRatio                 fhir.Ratio               `bson:"valueRatio" json:"valueRatio"`
	ValueRatioRange            fhir.RatioRange          `bson:"valueRatioRange" json:"valueRatioRange"`
	ValueReference             fhir.Reference           `bson:"valueReference" json:"valueReference"`
	ValueSampledData           fhir.SampledData         `bson:"valueSampledData" json:"valueSampledData"`
	ValueSignature             fhir.Signature           `bson:"valueSignature" json:"valueSignature"`
	ValueTiming                fhir.Timing              `bson:"valueTiming" json:"valueTiming"`
	ValueContactDetail         ContactDetail            `bson:"valueContactDetail" json:"valueContactDetail"`
	ValueDataRequirement       DataRequirement          `bson:"valueDataRequirement" json:"valueDataRequirement"`
	ValueExpression            Expression               `bson:"valueExpression" json:"valueExpression"`
	ValueParameterDefinition   fhir.ParameterDefinition `bson:"valueParameterDefinition" json:"valueParameterDefinition"`
	ValueRelatedArtifact       fhir.RelatedArtifact     `bson:"valueRelatedArtifact" json:"valueRelatedArtifact"`
	ValueTriggerDefinition     fhir.TriggerDefinition   `bson:"valueTriggerDefinition" json:"valueTriggerDefinition"`
	ValueUsageContext          fhir.UsageContext        `bson:"valueUsageContext" json:"valueUsageContext"`
	ValueAvailability          Availability             `bson:"valueAvailability" json:"valueAvailability"`
	ValueExtendedContactDetail ExtendedContactDetail    `bson:"valueExtendedContactDetail" json:"valueExtendedContactDetail"`
	ValueDosage                Dosage                   `bson:"valueDosage" json:"valueDosage"`
	ValueMeta                  fhir.Meta                `bson:"valueMeta" json:"valueMeta"`
}
type ElementDefinitionConstraint struct {
	Id           *string            `bson:"id,omitempty" json:"id,omitempty"`
	Extension    []Extension        `bson:"extension,omitempty" json:"extension,omitempty"`
	Key          string             `bson:"key" json:"key"`
	Requirements *string            `bson:"requirements,omitempty" json:"requirements,omitempty"`
	Severity     ConstraintSeverity `bson:"severity" json:"severity"`
	Suppress     *bool              `bson:"suppress,omitempty" json:"suppress,omitempty"`
	Human        string             `bson:"human" json:"human"`
	Expression   *string            `bson:"expression,omitempty" json:"expression,omitempty"`
	Source       *string            `bson:"source,omitempty" json:"source,omitempty"`
}
type ElementDefinitionBinding struct {
	Id          *string                              `bson:"id,omitempty" json:"id,omitempty"`
	Extension   []Extension                          `bson:"extension,omitempty" json:"extension,omitempty"`
	Strength    BindingStrength                      `bson:"strength" json:"strength"`
	Description *string                              `bson:"description,omitempty" json:"description,omitempty"`
	ValueSet    *string                              `bson:"valueSet,omitempty" json:"valueSet,omitempty"`
	Additional  []ElementDefinitionBindingAdditional `bson:"additional,omitempty" json:"additional,omitempty"`
}
type ElementDefinitionBindingAdditional struct {
	Id            *string                    `bson:"id,omitempty" json:"id,omitempty"`
	Extension     []Extension                `bson:"extension,omitempty" json:"extension,omitempty"`
	Purpose       AdditionalBindingPurposeVS `bson:"purpose" json:"purpose"`
	ValueSet      string                     `bson:"valueSet" json:"valueSet"`
	Documentation *string                    `bson:"documentation,omitempty" json:"documentation,omitempty"`
	ShortDoco     *string                    `bson:"shortDoco,omitempty" json:"shortDoco,omitempty"`
	Usage         []fhir.UsageContext        `bson:"usage,omitempty" json:"usage,omitempty"`
	Any           *bool                      `bson:"any,omitempty" json:"any,omitempty"`
}
type ElementDefinitionMapping struct {
	Id        *string     `bson:"id,omitempty" json:"id,omitempty"`
	Extension []Extension `bson:"extension,omitempty" json:"extension,omitempty"`
	Identity  string      `bson:"identity" json:"identity"`
	Language  *string     `bson:"language,omitempty" json:"language,omitempty"`
	Map       string      `bson:"map" json:"map"`
	Comment   *string     `bson:"comment,omitempty" json:"comment,omitempty"`
}
