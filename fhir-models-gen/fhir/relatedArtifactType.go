// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// RelatedArtifactType is documented here http://hl7.org/fhir/ValueSet/related-artifact-type
type RelatedArtifactType int

const (
	RelatedArtifactTypeDocumentation RelatedArtifactType = iota
	RelatedArtifactTypeJustification
	RelatedArtifactTypeCitation
	RelatedArtifactTypePredecessor
	RelatedArtifactTypeSuccessor
	RelatedArtifactTypeDerivedFrom
	RelatedArtifactTypeDependsOn
	RelatedArtifactTypeComposedOf
	RelatedArtifactTypePartOf
	RelatedArtifactTypeAmends
	RelatedArtifactTypeAmendedWith
	RelatedArtifactTypeAppends
	RelatedArtifactTypeAppendedWith
	RelatedArtifactTypeCites
	RelatedArtifactTypeCitedBy
	RelatedArtifactTypeCommentsOn
	RelatedArtifactTypeCommentIn
	RelatedArtifactTypeContains
	RelatedArtifactTypeContainedIn
	RelatedArtifactTypeCorrects
	RelatedArtifactTypeCorrectionIn
	RelatedArtifactTypeReplaces
	RelatedArtifactTypeReplacedWith
	RelatedArtifactTypeRetracts
	RelatedArtifactTypeRetractedBy
	RelatedArtifactTypeSigns
	RelatedArtifactTypeSimilarTo
	RelatedArtifactTypeSupports
	RelatedArtifactTypeSupportedWith
	RelatedArtifactTypeTransforms
	RelatedArtifactTypeTransformedInto
	RelatedArtifactTypeTransformedWith
	RelatedArtifactTypeDocuments
	RelatedArtifactTypeSpecificationOf
	RelatedArtifactTypeCreatedWith
	RelatedArtifactTypeCiteAs
)

func (code RelatedArtifactType) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *RelatedArtifactType) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "documentation":
		*code = RelatedArtifactTypeDocumentation
	case "justification":
		*code = RelatedArtifactTypeJustification
	case "citation":
		*code = RelatedArtifactTypeCitation
	case "predecessor":
		*code = RelatedArtifactTypePredecessor
	case "successor":
		*code = RelatedArtifactTypeSuccessor
	case "derived-from":
		*code = RelatedArtifactTypeDerivedFrom
	case "depends-on":
		*code = RelatedArtifactTypeDependsOn
	case "composed-of":
		*code = RelatedArtifactTypeComposedOf
	case "part-of":
		*code = RelatedArtifactTypePartOf
	case "amends":
		*code = RelatedArtifactTypeAmends
	case "amended-with":
		*code = RelatedArtifactTypeAmendedWith
	case "appends":
		*code = RelatedArtifactTypeAppends
	case "appended-with":
		*code = RelatedArtifactTypeAppendedWith
	case "cites":
		*code = RelatedArtifactTypeCites
	case "cited-by":
		*code = RelatedArtifactTypeCitedBy
	case "comments-on":
		*code = RelatedArtifactTypeCommentsOn
	case "comment-in":
		*code = RelatedArtifactTypeCommentIn
	case "contains":
		*code = RelatedArtifactTypeContains
	case "contained-in":
		*code = RelatedArtifactTypeContainedIn
	case "corrects":
		*code = RelatedArtifactTypeCorrects
	case "correction-in":
		*code = RelatedArtifactTypeCorrectionIn
	case "replaces":
		*code = RelatedArtifactTypeReplaces
	case "replaced-with":
		*code = RelatedArtifactTypeReplacedWith
	case "retracts":
		*code = RelatedArtifactTypeRetracts
	case "retracted-by":
		*code = RelatedArtifactTypeRetractedBy
	case "signs":
		*code = RelatedArtifactTypeSigns
	case "similar-to":
		*code = RelatedArtifactTypeSimilarTo
	case "supports":
		*code = RelatedArtifactTypeSupports
	case "supported-with":
		*code = RelatedArtifactTypeSupportedWith
	case "transforms":
		*code = RelatedArtifactTypeTransforms
	case "transformed-into":
		*code = RelatedArtifactTypeTransformedInto
	case "transformed-with":
		*code = RelatedArtifactTypeTransformedWith
	case "documents":
		*code = RelatedArtifactTypeDocuments
	case "specification-of":
		*code = RelatedArtifactTypeSpecificationOf
	case "created-with":
		*code = RelatedArtifactTypeCreatedWith
	case "cite-as":
		*code = RelatedArtifactTypeCiteAs
	default:
		return fmt.Errorf("unknown RelatedArtifactType code `%s`", s)
	}
	return nil
}
func (code RelatedArtifactType) String() string {
	return code.Code()
}
func (code RelatedArtifactType) Code() string {
	switch code {
	case RelatedArtifactTypeDocumentation:
		return "documentation"
	case RelatedArtifactTypeJustification:
		return "justification"
	case RelatedArtifactTypeCitation:
		return "citation"
	case RelatedArtifactTypePredecessor:
		return "predecessor"
	case RelatedArtifactTypeSuccessor:
		return "successor"
	case RelatedArtifactTypeDerivedFrom:
		return "derived-from"
	case RelatedArtifactTypeDependsOn:
		return "depends-on"
	case RelatedArtifactTypeComposedOf:
		return "composed-of"
	case RelatedArtifactTypePartOf:
		return "part-of"
	case RelatedArtifactTypeAmends:
		return "amends"
	case RelatedArtifactTypeAmendedWith:
		return "amended-with"
	case RelatedArtifactTypeAppends:
		return "appends"
	case RelatedArtifactTypeAppendedWith:
		return "appended-with"
	case RelatedArtifactTypeCites:
		return "cites"
	case RelatedArtifactTypeCitedBy:
		return "cited-by"
	case RelatedArtifactTypeCommentsOn:
		return "comments-on"
	case RelatedArtifactTypeCommentIn:
		return "comment-in"
	case RelatedArtifactTypeContains:
		return "contains"
	case RelatedArtifactTypeContainedIn:
		return "contained-in"
	case RelatedArtifactTypeCorrects:
		return "corrects"
	case RelatedArtifactTypeCorrectionIn:
		return "correction-in"
	case RelatedArtifactTypeReplaces:
		return "replaces"
	case RelatedArtifactTypeReplacedWith:
		return "replaced-with"
	case RelatedArtifactTypeRetracts:
		return "retracts"
	case RelatedArtifactTypeRetractedBy:
		return "retracted-by"
	case RelatedArtifactTypeSigns:
		return "signs"
	case RelatedArtifactTypeSimilarTo:
		return "similar-to"
	case RelatedArtifactTypeSupports:
		return "supports"
	case RelatedArtifactTypeSupportedWith:
		return "supported-with"
	case RelatedArtifactTypeTransforms:
		return "transforms"
	case RelatedArtifactTypeTransformedInto:
		return "transformed-into"
	case RelatedArtifactTypeTransformedWith:
		return "transformed-with"
	case RelatedArtifactTypeDocuments:
		return "documents"
	case RelatedArtifactTypeSpecificationOf:
		return "specification-of"
	case RelatedArtifactTypeCreatedWith:
		return "created-with"
	case RelatedArtifactTypeCiteAs:
		return "cite-as"
	}
	return "<unknown>"
}
func (code RelatedArtifactType) Display() string {
	switch code {
	case RelatedArtifactTypeDocumentation:
		return "Documentation"
	case RelatedArtifactTypeJustification:
		return "Justification"
	case RelatedArtifactTypeCitation:
		return "Citation"
	case RelatedArtifactTypePredecessor:
		return "Predecessor"
	case RelatedArtifactTypeSuccessor:
		return "Successor"
	case RelatedArtifactTypeDerivedFrom:
		return "Derived From"
	case RelatedArtifactTypeDependsOn:
		return "Depends On"
	case RelatedArtifactTypeComposedOf:
		return "Composed Of"
	case RelatedArtifactTypePartOf:
		return "Part Of"
	case RelatedArtifactTypeAmends:
		return "Amends"
	case RelatedArtifactTypeAmendedWith:
		return "Amended With"
	case RelatedArtifactTypeAppends:
		return "Appends"
	case RelatedArtifactTypeAppendedWith:
		return "Appended With"
	case RelatedArtifactTypeCites:
		return "Cites"
	case RelatedArtifactTypeCitedBy:
		return "Cited By"
	case RelatedArtifactTypeCommentsOn:
		return "Is Comment On"
	case RelatedArtifactTypeCommentIn:
		return "Has Comment In"
	case RelatedArtifactTypeContains:
		return "Contains"
	case RelatedArtifactTypeContainedIn:
		return "Contained In"
	case RelatedArtifactTypeCorrects:
		return "Corrects"
	case RelatedArtifactTypeCorrectionIn:
		return "Correction In"
	case RelatedArtifactTypeReplaces:
		return "Replaces"
	case RelatedArtifactTypeReplacedWith:
		return "Replaced With"
	case RelatedArtifactTypeRetracts:
		return "Retracts"
	case RelatedArtifactTypeRetractedBy:
		return "Retracted By"
	case RelatedArtifactTypeSigns:
		return "Signs"
	case RelatedArtifactTypeSimilarTo:
		return "Similar To"
	case RelatedArtifactTypeSupports:
		return "Supports"
	case RelatedArtifactTypeSupportedWith:
		return "Supported With"
	case RelatedArtifactTypeTransforms:
		return "Transforms"
	case RelatedArtifactTypeTransformedInto:
		return "Transformed Into"
	case RelatedArtifactTypeTransformedWith:
		return "Transformed With"
	case RelatedArtifactTypeDocuments:
		return "Documents"
	case RelatedArtifactTypeSpecificationOf:
		return "Specification Of"
	case RelatedArtifactTypeCreatedWith:
		return "Created With"
	case RelatedArtifactTypeCiteAs:
		return "Cite As"
	}
	return "<unknown>"
}
func (code RelatedArtifactType) Definition() string {
	switch code {
	case RelatedArtifactTypeDocumentation:
		return "Additional documentation for the knowledge resource. This would include additional instructions on usage as well as additional information on clinical context or appropriateness."
	case RelatedArtifactTypeJustification:
		return "The target artifact is a summary of the justification for the knowledge resource including supporting evidence, relevant guidelines, or other clinically important information. This information is intended to provide a way to make the justification for the knowledge resource available to the consumer of interventions or results produced by the knowledge resource."
	case RelatedArtifactTypeCitation:
		return "Bibliographic citation for papers, references, or other relevant material for the knowledge resource. This is intended to allow for citation of related material, but that was not necessarily specifically prepared in connection with this knowledge resource."
	case RelatedArtifactTypePredecessor:
		return "The previous version of the knowledge artifact, used to establish an ordering of versions of an artifact, independent of the status of each version."
	case RelatedArtifactTypeSuccessor:
		return "The subsequent version of the knowledge artfact, used to establish an ordering of versions of an artifact, independent of the status of each version."
	case RelatedArtifactTypeDerivedFrom:
		return "This artifact is derived from the target artifact. This is intended to capture the relationship in which a particular knowledge resource is based on the content of another artifact, but is modified to capture either a different set of overall requirements, or a more specific set of requirements such as those involved in a particular institution or clinical setting. The artifact may be derived from one or more target artifacts."
	case RelatedArtifactTypeDependsOn:
		return "This artifact depends on the target artifact. There is a requirement to use the target artifact in the creation or interpretation of this artifact."
	case RelatedArtifactTypeComposedOf:
		return "This artifact is composed of the target artifact. This artifact is constructed with the target artifact as a component. The target artifact is a part of this artifact. (A dataset is composed of data.)."
	case RelatedArtifactTypePartOf:
		return "This artifact is a part of the target artifact. The target artifact is composed of this artifact (and possibly other artifacts)."
	case RelatedArtifactTypeAmends:
		return "This artifact amends or changes the target artifact. This artifact adds additional information that is functionally expected to replace information in the target artifact. This artifact replaces a part but not all of the target artifact."
	case RelatedArtifactTypeAmendedWith:
		return "This artifact is amended with or changed by the target artifact. There is information in this artifact that should be functionally replaced with information in the target artifact."
	case RelatedArtifactTypeAppends:
		return "This artifact adds additional information to the target artifact. The additional information does not replace or change information in the target artifact."
	case RelatedArtifactTypeAppendedWith:
		return "This artifact has additional information in the target artifact."
	case RelatedArtifactTypeCites:
		return "This artifact cites the target artifact. This may be a bibliographic citation for papers, references, or other relevant material for the knowledge resource. This is intended to allow for citation of related material, but that was not necessarily specifically prepared in connection with this knowledge resource."
	case RelatedArtifactTypeCitedBy:
		return "This artifact is cited by the target artifact."
	case RelatedArtifactTypeCommentsOn:
		return "This artifact contains comments about the target artifact."
	case RelatedArtifactTypeCommentIn:
		return "This artifact has comments about it in the target artifact.  The type of comments may be expressed in the targetClassifier element such as reply, review, editorial, feedback, solicited, unsolicited, structured, unstructured."
	case RelatedArtifactTypeContains:
		return "This artifact is a container in which the target artifact is contained. A container is a data structure whose instances are collections of other objects. (A database contains the dataset.)."
	case RelatedArtifactTypeContainedIn:
		return "This artifact is contained in the target artifact. The target artifact is a data structure whose instances are collections of other objects."
	case RelatedArtifactTypeCorrects:
		return "This artifact identifies errors and replacement content for the target artifact."
	case RelatedArtifactTypeCorrectionIn:
		return "This artifact has corrections to it in the target artifact. The target artifact identifies errors and replacement content for this artifact."
	case RelatedArtifactTypeReplaces:
		return "This artifact replaces or supersedes the target artifact. The target artifact may be considered deprecated."
	case RelatedArtifactTypeReplacedWith:
		return "This artifact is replaced with or superseded by the target artifact. This artifact may be considered deprecated."
	case RelatedArtifactTypeRetracts:
		return "This artifact retracts the target artifact. The content that was published in the target artifact should be considered removed from publication and should no longer be considered part of the public record."
	case RelatedArtifactTypeRetractedBy:
		return "This artifact is retracted by the target artifact. The content that was published in this artifact should be considered removed from publication and should no longer be considered part of the public record."
	case RelatedArtifactTypeSigns:
		return "This artifact is a signature of the target artifact."
	case RelatedArtifactTypeSimilarTo:
		return "This artifact has characteristics in common with the target artifact. This relationship may be used in systems to “deduplicate” knowledge artifacts from different sources, or in systems to show “similar items”."
	case RelatedArtifactTypeSupports:
		return "This artifact provides additional support for the target artifact. The type of support  is not documentation as it does not describe, explain, or instruct regarding the target artifact."
	case RelatedArtifactTypeSupportedWith:
		return "The target artifact contains additional information related to the knowledge artifact but is not documentation as the additional information does not describe, explain, or instruct regarding the knowledge artifact content or application. This could include an associated dataset."
	case RelatedArtifactTypeTransforms:
		return "This artifact was generated by transforming the target artifact (e.g., format or language conversion). This is intended to capture the relationship in which a particular knowledge resource is based on the content of another artifact, but changes are only apparent in form and there is only one target artifact with the “transforms” relationship type."
	case RelatedArtifactTypeTransformedInto:
		return "This artifact was transformed into the target artifact (e.g., by format or language conversion)."
	case RelatedArtifactTypeTransformedWith:
		return "This artifact was generated by transforming a related artifact (e.g., format or language conversion), noted separately with the “transforms” relationship type. This transformation used the target artifact to inform the transformation. The target artifact may be a conversion script or translation guide."
	case RelatedArtifactTypeDocuments:
		return "This artifact provides additional documentation for the target artifact. This could include additional instructions on usage as well as additional information on clinical context or appropriateness."
	case RelatedArtifactTypeSpecificationOf:
		return "The target artifact is a precise description of a concept in this artifact. This may be used when the RelatedArtifact datatype is used in elements contained in this artifact."
	case RelatedArtifactTypeCreatedWith:
		return "This artifact was created with the target artifact. The target artifact is a tool or support material used in the creation of the artifact, and not content that the artifact was derived from."
	case RelatedArtifactTypeCiteAs:
		return "The related artifact is the citation for this artifact."
	}
	return "<unknown>"
}
